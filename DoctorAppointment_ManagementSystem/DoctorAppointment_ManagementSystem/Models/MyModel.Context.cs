//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoctorAppointment_ManagementSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DoctorAppointment_ManagemenetSystemEntities : DbContext
    {
        public DoctorAppointment_ManagemenetSystemEntities()
            : base("name=DoctorAppointment_ManagemenetSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<appointment> appointments { get; set; }
        public virtual DbSet<AppointmentPayment> AppointmentPayments { get; set; }
        public virtual DbSet<AppointmentRecommendation> AppointmentRecommendations { get; set; }
        public virtual DbSet<AppointmentStatu> AppointmentStatus { get; set; }
        public virtual DbSet<Doc_Experience> Doc_Experience { get; set; }
        public virtual DbSet<Doc_Specialization> Doc_Specialization { get; set; }
        public virtual DbSet<DocTime> DocTimes { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Specialization> Specializations { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<timeslot> timeslots { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int sp_ActiveDocList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActiveDocList");
        }
    
        public virtual ObjectResult<sp_InActiveDocList_Result> sp_InActiveDocList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InActiveDocList_Result>("sp_InActiveDocList");
        }
    
        public virtual ObjectResult<sp_ActivePatientsList_Result> sp_ActivePatientsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ActivePatientsList_Result>("sp_ActivePatientsList");
        }
    
        public virtual ObjectResult<sp_InActivePatientsList_Result> sp_InActivePatientsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InActivePatientsList_Result>("sp_InActivePatientsList");
        }
    
        public virtual ObjectResult<sp_TotalActiveUsers_Result> sp_TotalActiveUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TotalActiveUsers_Result>("sp_TotalActiveUsers");
        }
    
        public virtual ObjectResult<sp_TotalInActiveUsers_Result> sp_TotalInActiveUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TotalInActiveUsers_Result>("sp_TotalInActiveUsers");
        }
    
        public virtual ObjectResult<doclist_Result> doclist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doclist_Result>("doclist");
        }
    
        public virtual ObjectResult<fullDocProfile_Result> fullDocProfile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fullDocProfile_Result>("fullDocProfile");
        }
    
        public virtual int docsappointment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("docsappointment");
        }
    
        public virtual int patientsappointments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("patientsappointments");
        }
    }
}
