//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoctorAppointment_ManagementSystem.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class User
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public User()
        {
            this.appointments = new HashSet<appointment>();
            this.appointments1 = new HashSet<appointment>();
            this.Doc_Experience = new HashSet<Doc_Experience>();
            this.Doc_Specialization = new HashSet<Doc_Specialization>();
            this.DocTimes = new HashSet<DocTime>();
        }

        public int User_ID { get; set; }
        [Required(ErrorMessage = "FullName is Required!  ")]
        [MaxLength(28)]
        [MinLength(2)]
        public string FullName { get; set; }

        [Display(Name = "Username")]
        [Required(ErrorMessage = "Username is Required!")]
        [MaxLength(33)]
        [MinLength(8)]
        public string UserName { get; set; }

        [DataType(DataType.Password)]
        [MaxLength(17)]
        [MinLength(8)]
        [Required(ErrorMessage = "Password is Required!")]
        public string Password { get; set; }

        [MaxLength(11)]
        [MinLength(11)]
        [Required(ErrorMessage = "Phone is Required!")]
        public string Phone { get; set; }

        [CustomDate]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        [DataType(DataType.Date)]
        [Display(Name = "Date Of Birth")]
        [Required(ErrorMessage = "Date Of Birth is Required!")]
        public System.DateTime DOB { get; set; }

        [Required(ErrorMessage = "Gender is Required!")]
        public string Gender { get; set; }

        [Required(ErrorMessage = "CNIC is Required!")]
        [MaxLength(13)]
        [MinLength(13)]
        public string CNIC { get; set; }

        [Required(ErrorMessage = "Email Address is Required!")]
        [MaxLength(35, ErrorMessage = "Email can't exceed 35 characters!")]
        [EmailAddress(ErrorMessage = "Invalid Email Address!")]
        public string Email { get; set; }

        [MaxLength(36, ErrorMessage = "City Name can not exceed 36 characters!")]
        public string City { get; set; }
        [MaxLength(65, ErrorMessage = "Address can not exceed 65 characters, Please make it short!")]
        public string Address { get; set; }
        public bool isActive { get; set; } = true;
        public Nullable<System.DateTime> CreatedDate { get; set; }
        public Nullable<System.DateTime> UpdatedDate { get; set; }
        public Nullable<int> CreatedBy { get; set; }
        public Nullable<int> UpdatedBy { get; set; }
        public int UserRoleId { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<appointment> appointments { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<appointment> appointments1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Doc_Experience> Doc_Experience { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Doc_Specialization> Doc_Specialization { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DocTime> DocTimes { get; set; }
        public virtual Role Role { get; set; }
    }
}
