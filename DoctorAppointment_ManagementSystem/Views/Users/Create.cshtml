@model DoctorAppointment_ManagementSystem.Models.User


@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Male",
        Value = "Male",

    });
    listItems.Add(new SelectListItem
    {
        Text = "Female",
        Value = "Female",

    });
   

    if (Convert.ToInt32(Session["UserRole"]) == 1)
    {
        Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    }
}

<head>
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="~/scripts/jquery.validate.js"></script>
    <script src="~/scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/scripts/jquery.validate.min.js"></script>
    <script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
    <link href="~/CustomStyle/RegisterStyleSheet.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.css">



    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.js"></script>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
  

    <link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css" rel="stylesheet" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
</head>


<body>

    <div id="RegisterFormLayout">
        <div class="col-md-6">
            <div id="Registerform">
                @using (Html.BeginForm("Create", "Users", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <h3>Registration Form</h3>

                    <form class="form-horizontal">


                        <label>Full Name</label>
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @Placeholder = "For ex. John Mark" } })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>

                        <label>Create your username</label><br />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @Placeholder = "For ex. JohnMark000" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <label>Password</label><br />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @Placeholder = "********" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        
                    


                        <label>Phone no.</label><br />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @Placeholder = "03XXXXXXXXX" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <label>Date of Birth</label><br />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">

                                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control datepicker", @id="datepicker" , @type="date"}  })
                                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                       
                        <label>Gender</label><br />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fas fa-restroom"></i></span>
                                    @Html.DropDownList("Gender", listItems, "-- Select Gender --", htmlAttributes: new { @class = "form-control", @id = "dropdown" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <label>CNIC</label><br />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-id-card"></i></span>
                                    @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control", @Placeholder = "XXXXXXXXXXXXX" } })
                                    @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <label>Email Address</label><br />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @Placeholder = "For ex. markjohn@gmail.com" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <label>City</label><br />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-globe"></i></span>
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @Placeholder = "City" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <label>Address</label><br />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Street # 3, Building # 4, 4th floor etc." } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.HiddenFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.HiddenFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" , @Value = ViewBag.CreatedDate } })
                                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.HiddenFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.HiddenFor(model=>model.UpdatedDate, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.UpdatedDate } })
                                @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                      




                        @*<label>IsActive</label><br />*@
                        @*<div class="form-group">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <div class="checkbox">
                                        @Html.HiddenFor(model => model.isActive)
                                        @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            </div>*@

                            

                           
                         @if (Convert.ToInt32(Session["UserRole"]) == 1)
                        {
                            <div class="form-group">
                                @Html.HiddenFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control", @Value = Convert.ToInt32(Session["UserRole"]) } })
                                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>
                         }
                         else
                         { 
                            <div class="form-group">
                                @Html.HiddenFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control"} })
                                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>
                         }

                            <div class="form-group">
                                @Html.HiddenFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.HiddenFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.UpdatedBy } })
                                    @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <label>Select your Role</label><br />
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fas fa-user-circle"></i></span>
                                       @Html.DropDownList("UserRoleId", null, htmlAttributes: new { @class = "form-control", @id = "dropdown" })
                                    </div>
                                </div>
                            </div>

                     
                    
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-2">
                                    <br />
                                    <input type="submit" class="btn btn-primary" id="subm" value="Create" />
                                    <hr />
                                    <span> Already Registered? @Html.ActionLink("Login", "Login", "Account")</span>

                                </div>
                            </div>
                    </form>
                }

            </div>

        </div>

        <div class="row">
            <div class="col-md-6">
                <div id="RegisterImage">
                    @if (Convert.ToInt32(Session["UserRole"]) == 1)
                    {
                        <img src="~/images/doc.png" style="width:400px;" class="img-responsive" />
                    }
                    else { 
                    <img src="~/images/doc.png" class="img-responsive" />
                    }
                </div>
            </div>
        </div>
    </div>



</body>

@if (!string.IsNullOrEmpty(ViewBag.Message))
{
<script type="text/javascript">alert('@ViewBag.Message');</script>
}







@*<span class="col-md-offset-6 col-md-10">already have an account? @Html.ActionLink("Login", "Login", "account")</span>*@

@*<@*script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@



@*@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isActive)
                    @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserRoleId, "UserRoleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserRoleId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserRoleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

@*<div>
    @Html.ActionLink("Login", "Login","Account")
</div>*@

@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
